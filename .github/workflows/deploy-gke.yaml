name: Deploy to GKE

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
      - '**.md'

env:
  PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  # DOCKER_REPO_URL: ${{ secrets.DOCKER_REPO_URL }}
  # IMAGE: ${{ github.event.repository.name }} # Name of repository

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: npm install
      - run: npm run build

      - name: Auth Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.6.0

      # Configure Docker to use the gcloud command-line tool as a credential
      - run: |-
          gcloud --quiet auth configure-docker
      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.8.0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # Build the Docker image
      - name: Build docker image
        run: docker build -t "$DOCKER_REPO_URL/$PROJECT_ID/$IMAGE:$GITHUB_SHA" -t "$DOCKER_REPO_URL/$PROJECT_ID/$IMAGE:latest" .

      # Push the Docker image to Google Container Registry
      - name: Publish docker image
        run: |-
          docker push "$DOCKER_REPO_URL/$PROJECT_ID/$IMAGE" --all-tags
      - name: Set image on k8s app file
        run: sed -i -e "s|{{GITHUB_SHA}}|$GITHUB_SHA|g" kubernetes.yaml

      # Deploy to the GKE cluster
      - name: Deploy to the GKE cluster
        run: |-
          kubectl apply -f kubernetes.yaml
